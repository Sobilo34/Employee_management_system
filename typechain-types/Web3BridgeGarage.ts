/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export declare namespace Web3BridgeGarage {
  export type EmployeeStruct = {
    name: string;
    role: BigNumberish;
    employed: boolean;
  };

  export type EmployeeStructOutput = [
    name: string,
    role: bigint,
    employed: boolean
  ] & { name: string; role: bigint; employed: boolean };
}

export interface Web3BridgeGarageInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "addEmployee"
      | "garageAccessControl"
      | "getAnEmployee"
      | "getEmployeesList"
      | "owner"
      | "terminateEmployee"
      | "updateEmployee"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addEmployee",
    values: [AddressLike, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "garageAccessControl",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAnEmployee",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getEmployeesList",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "terminateEmployee",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateEmployee",
    values: [AddressLike, string, BigNumberish, boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "addEmployee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "garageAccessControl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAnEmployee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEmployeesList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "terminateEmployee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateEmployee",
    data: BytesLike
  ): Result;
}

export interface Web3BridgeGarage extends BaseContract {
  connect(runner?: ContractRunner | null): Web3BridgeGarage;
  waitForDeployment(): Promise<this>;

  interface: Web3BridgeGarageInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  addEmployee: TypedContractMethod<
    [_employeeAddress: AddressLike, _name: string, _role: BigNumberish],
    [void],
    "nonpayable"
  >;

  garageAccessControl: TypedContractMethod<
    [_employeeAddress: AddressLike],
    [void],
    "view"
  >;

  getAnEmployee: TypedContractMethod<
    [_employeeAddress: AddressLike],
    [Web3BridgeGarage.EmployeeStructOutput],
    "view"
  >;

  getEmployeesList: TypedContractMethod<
    [],
    [Web3BridgeGarage.EmployeeStructOutput[]],
    "view"
  >;

  owner: TypedContractMethod<[], [string], "view">;

  terminateEmployee: TypedContractMethod<
    [_employeeAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  updateEmployee: TypedContractMethod<
    [
      _employeeAddress: AddressLike,
      _newName: string,
      _newRole: BigNumberish,
      _employed: boolean
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "addEmployee"
  ): TypedContractMethod<
    [_employeeAddress: AddressLike, _name: string, _role: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "garageAccessControl"
  ): TypedContractMethod<[_employeeAddress: AddressLike], [void], "view">;
  getFunction(
    nameOrSignature: "getAnEmployee"
  ): TypedContractMethod<
    [_employeeAddress: AddressLike],
    [Web3BridgeGarage.EmployeeStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getEmployeesList"
  ): TypedContractMethod<[], [Web3BridgeGarage.EmployeeStructOutput[]], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "terminateEmployee"
  ): TypedContractMethod<[_employeeAddress: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "updateEmployee"
  ): TypedContractMethod<
    [
      _employeeAddress: AddressLike,
      _newName: string,
      _newRole: BigNumberish,
      _employed: boolean
    ],
    [void],
    "nonpayable"
  >;

  filters: {};
}
