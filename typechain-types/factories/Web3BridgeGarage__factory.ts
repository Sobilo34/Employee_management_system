/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  Web3BridgeGarage,
  Web3BridgeGarageInterface,
} from "../Web3BridgeGarage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EMPLOYEE_ALREADY_EXISTS",
    type: "error",
  },
  {
    inputs: [],
    name: "EMPLOYEE_NOT_FOUND",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "USER_DONT_HAVE_ACCESS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum Web3BridgeGarage.Role",
        name: "_role",
        type: "uint8",
      },
    ],
    name: "addEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "garageAccessControl",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "getAnEmployee",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum Web3BridgeGarage.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "employed",
            type: "bool",
          },
        ],
        internalType: "struct Web3BridgeGarage.Employee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEmployeesList",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum Web3BridgeGarage.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "employed",
            type: "bool",
          },
        ],
        internalType: "struct Web3BridgeGarage.Employee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "terminateEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "enum Web3BridgeGarage.Role",
        name: "_newRole",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_employed",
        type: "bool",
      },
    ],
    name: "updateEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116178061005f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ea578063b1670d5c14610108578063d6ded81414610126578063fb088a28146101425761007d565b8063281c6ad31461008257806335b79557146100b25780636fa50604146100ce575b600080fd5b61009c60048036038101906100979190610d33565b61015e565b6040516100a99190610ed2565b60405180910390f35b6100cc60048036038101906100c7919061107a565b61029f565b005b6100e860048036038101906100e39190610d33565b610489565b005b6100f26105f4565b6040516100ff919061110c565b60405180910390f35b610110610618565b60405161011d9190611239565b60405180910390f35b610140600480360381019061013b9190610d33565b61082a565b005b61015c6004803603810190610157919061125b565b610a3f565b005b610166610c8c565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546101c0906112f9565b80601f01602080910402602001604051908101604052809291908181526020018280546101ec906112f9565b80156102395780601f1061020e57610100808354040283529160200191610239565b820191906000526020600020905b81548152906001019060200180831161021c57829003601f168201915b505050505081526020016001820160009054906101000a900460ff16600581111561026757610266610df0565b5b600581111561027957610278610df0565b5b81526020016001820160019054906101000a900460ff1615151515815250509050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610324576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610373906112f9565b9050036103ac576040517ff33a263900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052808481526020018360058111156103d0576103cf610df0565b5b8152602001821515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161042f91906114e0565b5060208201518160010160006101000a81548160ff0219169083600581111561045b5761045a610df0565b5b021790555060408201518160010160016101000a81548160ff02191690831515021790555090505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050e576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461055d906112f9565b905003610596576040517ff33a263900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600060028054905067ffffffffffffffff81111561063b5761063a610efe565b5b60405190808252806020026020018201604052801561067457816020015b610661610c8c565b8152602001906001900390816106595790505b50905060005b60028054905081101561082257600160006002838154811061069f5761069e6115b2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461071f906112f9565b80601f016020809104026020016040519081016040528092919081815260200182805461074b906112f9565b80156107985780601f1061076d57610100808354040283529160200191610798565b820191906000526020600020905b81548152906001019060200180831161077b57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660058111156107c6576107c5610df0565b5b60058111156107d8576107d7610df0565b5b81526020016001820160019054906101000a900460ff16151515158152505082828151811061080a576108096115b2565b5b6020026020010181905250808060010191505061067a565b508091505090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054610886906112f9565b80601f01602080910402602001604051908101604052809291908181526020018280546108b2906112f9565b80156108ff5780601f106108d4576101008083540402835291602001916108ff565b820191906000526020600020905b8154815290600101906020018083116108e257829003601f168201915b505050505081526020016001820160009054906101000a900460ff16600581111561092d5761092c610df0565b5b600581111561093f5761093e610df0565b5b81526020016001820160019054906101000a900460ff161515151581525050905080604001511580610a045750600060058111156109805761097f610df0565b5b8160200151600581111561099757610996610df0565b5b141580156109ce5750600160058111156109b4576109b3610df0565b5b816020015160058111156109cb576109ca610df0565b5b14155b8015610a035750600260058111156109e9576109e8610df0565b5b81602001516005811115610a00576109ff610df0565b5b14155b5b15610a3b576040517fe7d3622d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac4576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610b13906112f9565b905014610b4c576040517f39310f2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060600160405280838152602001826005811115610b7057610b6f610df0565b5b815260200160011515815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610bd091906114e0565b5060208201518160010160006101000a81548160ff02191690836005811115610bfc57610bfb610df0565b5b021790555060408201518160010160016101000a81548160ff0219169083151502179055509050506002839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60405180606001604052806060815260200160006005811115610cb257610cb1610df0565b5b81526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0082610cd5565b9050919050565b610d1081610cf5565b8114610d1b57600080fd5b50565b600081359050610d2d81610d07565b92915050565b600060208284031215610d4957610d48610ccb565b5b6000610d5784828501610d1e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d9a578082015181840152602081019050610d7f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc282610d60565b610dcc8185610d6b565b9350610ddc818560208601610d7c565b610de581610da6565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610e3057610e2f610df0565b5b50565b6000819050610e4182610e1f565b919050565b6000610e5182610e33565b9050919050565b610e6181610e46565b82525050565b60008115159050919050565b610e7c81610e67565b82525050565b60006060830160008301518482036000860152610e9f8282610db7565b9150506020830151610eb46020860182610e58565b506040830151610ec76040860182610e73565b508091505092915050565b60006020820190508181036000830152610eec8184610e82565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f3682610da6565b810181811067ffffffffffffffff82111715610f5557610f54610efe565b5b80604052505050565b6000610f68610cc1565b9050610f748282610f2d565b919050565b600067ffffffffffffffff821115610f9457610f93610efe565b5b610f9d82610da6565b9050602081019050919050565b82818337600083830152505050565b6000610fcc610fc784610f79565b610f5e565b905082815260208101848484011115610fe857610fe7610ef9565b5b610ff3848285610faa565b509392505050565b600082601f8301126110105761100f610ef4565b5b8135611020848260208601610fb9565b91505092915050565b6006811061103657600080fd5b50565b60008135905061104881611029565b92915050565b61105781610e67565b811461106257600080fd5b50565b6000813590506110748161104e565b92915050565b6000806000806080858703121561109457611093610ccb565b5b60006110a287828801610d1e565b945050602085013567ffffffffffffffff8111156110c3576110c2610cd0565b5b6110cf87828801610ffb565b93505060406110e087828801611039565b92505060606110f187828801611065565b91505092959194509250565b61110681610cf5565b82525050565b600060208201905061112160008301846110fd565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060608301600083015184820360008601526111708282610db7565b91505060208301516111856020860182610e58565b5060408301516111986040860182610e73565b508091505092915050565b60006111af8383611153565b905092915050565b6000602082019050919050565b60006111cf82611127565b6111d98185611132565b9350836020820285016111eb85611143565b8060005b85811015611227578484038952815161120885826111a3565b9450611213836111b7565b925060208a019950506001810190506111ef565b50829750879550505050505092915050565b6000602082019050818103600083015261125381846111c4565b905092915050565b60008060006060848603121561127457611273610ccb565b5b600061128286828701610d1e565b935050602084013567ffffffffffffffff8111156112a3576112a2610cd0565b5b6112af86828701610ffb565b92505060406112c086828701611039565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131157607f821691505b602082108103611324576113236112ca565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261138c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261134f565b611396868361134f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006113dd6113d86113d3846113ae565b6113b8565b6113ae565b9050919050565b6000819050919050565b6113f7836113c2565b61140b611403826113e4565b84845461135c565b825550505050565b600090565b611420611413565b61142b8184846113ee565b505050565b5b8181101561144f57611444600082611418565b600181019050611431565b5050565b601f821115611494576114658161132a565b61146e8461133f565b8101602085101561147d578190505b6114916114898561133f565b830182611430565b50505b505050565b600082821c905092915050565b60006114b760001984600802611499565b1980831691505092915050565b60006114d083836114a6565b9150826002028217905092915050565b6114e982610d60565b67ffffffffffffffff81111561150257611501610efe565b5b61150c82546112f9565b611517828285611453565b600060209050601f83116001811461154a5760008415611538578287015190505b61154285826114c4565b8655506115aa565b601f1984166115588661132a565b60005b828110156115805784890151825560018201915060208501945060208101905061155b565b8683101561159d5784890151611599601f8916826114a6565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220d09c2e4ac813844f0e7f4e337e65dbf9d879e640b6890b6f3c3a9f5de41c85a064736f6c634300081e0033";

type Web3BridgeGarageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3BridgeGarageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3BridgeGarage__factory extends ContractFactory {
  constructor(...args: Web3BridgeGarageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Web3BridgeGarage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Web3BridgeGarage__factory {
    return super.connect(runner) as Web3BridgeGarage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3BridgeGarageInterface {
    return new Interface(_abi) as Web3BridgeGarageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Web3BridgeGarage {
    return new Contract(address, _abi, runner) as unknown as Web3BridgeGarage;
  }
}
